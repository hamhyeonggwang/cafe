// Ï†ÑÏó≠ Î≥ÄÏàò
let selectedRestaurant = null;
let selectedAddress = '';
let selectedDeliveryTime = '';
let selectedDeliveryFee = '';
let selectedPayment = '';
let cart = [];
let currentCategory = 'main';

// Î©îÎâ¥ Îç∞Ïù¥ÌÑ∞
const menuData = {
    'ÎßõÏûàÎäîÏπòÌÇ®': {
        main: [
            { name: 'ÌõÑÎùºÏù¥ÎìúÏπòÌÇ®', price: 18000, icon: 'üçó', description: 'Î∞îÏÇ≠Ìïú ÌõÑÎùºÏù¥ÎìúÏπòÌÇ®' },
            { name: 'ÏñëÎÖêÏπòÌÇ®', price: 19000, icon: 'üçó', description: 'Îß§ÏΩ§Îã¨ÏΩ§ ÏñëÎÖêÏπòÌÇ®' },
            { name: 'Í∞ÑÏû•ÏπòÌÇ®', price: 20000, icon: 'üçó', description: 'ÍπäÏùÄ Îßõ Í∞ÑÏû•ÏπòÌÇ®' },
            { name: 'ÌååÎã≠', price: 22000, icon: 'üçó', description: 'ÌååÍ∞Ä Îì¨Îøç ÌååÎã≠' }
        ],
        side: [
            { name: 'ÏπòÌÇ®Î¨¥', price: 1000, icon: 'ü•ï', description: 'Ïã†ÏÑ†Ìïú ÏπòÌÇ®Î¨¥' },
            { name: 'ÏΩúÎùº', price: 2000, icon: 'ü•§', description: 'ÏãúÏõêÌïú ÏΩúÎùº' },
            { name: 'ÏÇ¨Ïù¥Îã§', price: 2000, icon: 'ü•§', description: 'ÍπîÎÅîÌïú ÏÇ¨Ïù¥Îã§' }
        ],
        drink: [
            { name: 'ÏΩúÎùº', price: 2000, icon: 'ü•§', description: 'ÏãúÏõêÌïú ÏΩúÎùº' },
            { name: 'ÏÇ¨Ïù¥Îã§', price: 2000, icon: 'ü•§', description: 'ÍπîÎÅîÌïú ÏÇ¨Ïù¥Îã§' },
            { name: 'Îß•Ï£º', price: 4000, icon: 'üç∫', description: 'ÏãúÏõêÌïú Îß•Ï£º' }
        ],
        dessert: [
            { name: 'ÏïÑÏù¥Ïä§ÌÅ¨Î¶º', price: 3000, icon: 'üç¶', description: 'Îã¨ÏΩ§Ìïú ÏïÑÏù¥Ïä§ÌÅ¨Î¶º' },
            { name: 'ÏπòÌÇ®Î¨¥', price: 1000, icon: 'ü•ï', description: 'Ïã†ÏÑ†Ìïú ÏπòÌÇ®Î¨¥' }
        ]
    },
    'Ïã†ÏÑ†ÌïúÌîºÏûê': {
        main: [
            { name: 'ÌéòÌçºÎ°úÎãàÌîºÏûê', price: 22000, icon: 'üçï', description: 'Îß§ÏΩ§Ìïú ÌéòÌçºÎ°úÎãà' },
            { name: 'ÌïòÏôÄÏù¥ÏïàÌîºÏûê', price: 24000, icon: 'üçï', description: 'ÌååÏù∏Ïï†ÌîåÏù¥ Îì§Ïñ¥Í∞Ñ ÌîºÏûê' },
            { name: 'Î∂àÍ≥†Í∏∞ÌîºÏûê', price: 26000, icon: 'üçï', description: 'ÌïúÍµ≠Ïãù Î∂àÍ≥†Í∏∞ ÌîºÏûê' },
            { name: 'ÏπòÏ¶àÌîºÏûê', price: 20000, icon: 'üçï', description: 'ÏπòÏ¶àÍ∞Ä Îì¨Îøç' }
        ],
        side: [
            { name: 'ÏπòÌÇ®Ïúô', price: 8000, icon: 'üçó', description: 'Î∞îÏÇ≠Ìïú ÏπòÌÇ®Ïúô' },
            { name: 'ÏΩúÎùº', price: 2000, icon: 'ü•§', description: 'ÏãúÏõêÌïú ÏΩúÎùº' }
        ],
        drink: [
            { name: 'ÏΩúÎùº', price: 2000, icon: 'ü•§', description: 'ÏãúÏõêÌïú ÏΩúÎùº' },
            { name: 'ÏÇ¨Ïù¥Îã§', price: 2000, icon: 'ü•§', description: 'ÍπîÎÅîÌïú ÏÇ¨Ïù¥Îã§' }
        ],
        dessert: [
            { name: 'ÏïÑÏù¥Ïä§ÌÅ¨Î¶º', price: 3000, icon: 'üç¶', description: 'Îã¨ÏΩ§Ìïú ÏïÑÏù¥Ïä§ÌÅ¨Î¶º' }
        ]
    },
    'ÌïúÏãùÎãπ': {
        main: [
            { name: 'ÍπÄÏπòÏ∞åÍ∞ú', price: 12000, icon: 'üç≤', description: 'Îß§ÏΩ§Ìïú ÍπÄÏπòÏ∞åÍ∞ú' },
            { name: 'ÎêúÏû•Ï∞åÍ∞ú', price: 11000, icon: 'üç≤', description: 'Íµ¨ÏàòÌïú ÎêúÏû•Ï∞åÍ∞ú' },
            { name: 'Î∂àÍ≥†Í∏∞', price: 15000, icon: 'ü•©', description: 'ÎßõÏûàÎäî Î∂àÍ≥†Í∏∞' },
            { name: 'Ï†úÏú°Î≥∂Ïùå', price: 13000, icon: 'ü•©', description: 'Îß§ÏΩ§Îã¨ÏΩ§ Ï†úÏú°Î≥∂Ïùå' }
        ],
        side: [
            { name: 'ÍπÄÏπò', price: 2000, icon: 'ü•¨', description: 'Ïã†ÏÑ†Ìïú ÍπÄÏπò' },
            { name: 'ÎêúÏû•Íµ≠', price: 3000, icon: 'üç≤', description: 'Íµ¨ÏàòÌïú ÎêúÏû•Íµ≠' }
        ],
        drink: [
            { name: 'ÎßâÍ±∏Î¶¨', price: 4000, icon: 'üç∂', description: 'Íµ¨ÏàòÌïú ÎßâÍ±∏Î¶¨' },
            { name: 'ÏÜåÏ£º', price: 3000, icon: 'üç∂', description: 'ÍπîÎÅîÌïú ÏÜåÏ£º' }
        ],
        dessert: [
            { name: 'ÏãùÌòú', price: 2000, icon: 'üçØ', description: 'Îã¨ÏΩ§Ìïú ÏãùÌòú' }
        ]
    },
    'Ï§ëÍµ≠Ïßë': {
        main: [
            { name: 'ÏßúÏû•Î©¥', price: 8000, icon: 'üçú', description: 'ÎßõÏûàÎäî ÏßúÏû•Î©¥' },
            { name: 'Ïß¨ÎΩï', price: 9000, icon: 'üçú', description: 'Îß§ÏΩ§Ìïú Ïß¨ÎΩï' },
            { name: 'ÌÉïÏàòÏú°', price: 15000, icon: 'ü•©', description: 'Î∞îÏÇ≠Ìïú ÌÉïÏàòÏú°' },
            { name: 'ÍπêÌíçÍ∏∞', price: 16000, icon: 'üçó', description: 'Îã¨ÏΩ§Ìïú ÍπêÌíçÍ∏∞' }
        ],
        side: [
            { name: 'Íµ∞ÎßåÎëê', price: 5000, icon: 'ü•ü', description: 'Î∞îÏÇ≠Ìïú Íµ∞ÎßåÎëê' },
            { name: 'ÏñëÏû•Ìîº', price: 12000, icon: 'ü•¨', description: 'Ïã†ÏÑ†Ìïú ÏñëÏû•Ìîº' }
        ],
        drink: [
            { name: 'ÏΩúÎùº', price: 2000, icon: 'ü•§', description: 'ÏãúÏõêÌïú ÏΩúÎùº' },
            { name: 'ÏÇ¨Ïù¥Îã§', price: 2000, icon: 'ü•§', description: 'ÍπîÎÅîÌïú ÏÇ¨Ïù¥Îã§' }
        ],
        dessert: [
            { name: 'Îã®Ìå•Îπµ', price: 3000, icon: 'ü•ñ', description: 'Îã¨ÏΩ§Ìïú Îã®Ìå•Îπµ' }
        ]
    },
    'Î∂ÑÏãùÏ†ê': {
        main: [
            { name: 'Îñ°Î≥∂Ïù¥', price: 4000, icon: 'üç°', description: 'Îß§ÏΩ§Îã¨ÏΩ§ Îñ°Î≥∂Ïù¥' },
            { name: 'ÎùºÎ©¥', price: 5000, icon: 'üçú', description: 'ÎßõÏûàÎäî ÎùºÎ©¥' },
            { name: 'ÍπÄÎ∞•', price: 3000, icon: 'üçô', description: 'Ïã†ÏÑ†Ìïú ÍπÄÎ∞•' },
            { name: 'ÏàúÎåÄ', price: 6000, icon: 'ü•ñ', description: 'Íµ¨ÏàòÌïú ÏàúÎåÄ' }
        ],
        side: [
            { name: 'Ïñ¥Î¨µ', price: 2000, icon: 'üç¢', description: 'ÎßõÏûàÎäî Ïñ¥Î¨µ' },
            { name: 'ÌäÄÍπÄ', price: 3000, icon: 'üç§', description: 'Î∞îÏÇ≠Ìïú ÌäÄÍπÄ' }
        ],
        drink: [
            { name: 'ÏΩúÎùº', price: 1500, icon: 'ü•§', description: 'ÏãúÏõêÌïú ÏΩúÎùº' },
            { name: 'ÏÇ¨Ïù¥Îã§', price: 1500, icon: 'ü•§', description: 'ÍπîÎÅîÌïú ÏÇ¨Ïù¥Îã§' }
        ],
        dessert: [
            { name: 'ÏïÑÏù¥Ïä§ÌÅ¨Î¶º', price: 2000, icon: 'üç¶', description: 'Îã¨ÏΩ§Ìïú ÏïÑÏù¥Ïä§ÌÅ¨Î¶º' }
        ]
    },
    'Ïπ¥Ìéò': {
        main: [
            { name: 'ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏', price: 4000, icon: '‚òï', description: 'ÍπîÎÅîÌïú ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏' },
            { name: 'Ïπ¥ÌéòÎùºÎñº', price: 5000, icon: '‚òï', description: 'Î∂ÄÎìúÎü¨Ïö¥ Ïπ¥ÌéòÎùºÎñº' },
            { name: 'Ïπ¥Ìë∏ÏπòÎÖ∏', price: 5500, icon: '‚òï', description: 'Í±∞ÌíàÏù¥ ÌíçÎ∂ÄÌïú Ïπ¥Ìë∏ÏπòÎÖ∏' },
            { name: 'Î™®Ïπ¥', price: 6000, icon: '‚òï', description: 'Îã¨ÏΩ§Ìïú Î™®Ïπ¥' }
        ],
        side: [
            { name: 'ÏÉåÎìúÏúÑÏπò', price: 8000, icon: 'ü•™', description: 'Ïã†ÏÑ†Ìïú ÏÉåÎìúÏúÑÏπò' },
            { name: 'ÌÜ†Ïä§Ìä∏', price: 5000, icon: 'üçû', description: 'Î∞îÏÇ≠Ìïú ÌÜ†Ïä§Ìä∏' }
        ],
        drink: [
            { name: 'ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏', price: 4000, icon: '‚òï', description: 'ÍπîÎÅîÌïú ÏïÑÎ©îÎ¶¨Ïπ¥ÎÖ∏' },
            { name: 'Ïπ¥ÌéòÎùºÎñº', price: 5000, icon: '‚òï', description: 'Î∂ÄÎìúÎü¨Ïö¥ Ïπ¥ÌéòÎùºÎñº' },
            { name: 'Ïä§Î¨¥Îîî', price: 7000, icon: 'ü•§', description: 'ÏãúÏõêÌïú Ïä§Î¨¥Îîî' }
        ],
        dessert: [
            { name: 'Ìã∞ÎùºÎØ∏Ïàò', price: 8000, icon: 'üç∞', description: 'Î∂ÄÎìúÎü¨Ïö¥ Ìã∞ÎùºÎØ∏Ïàò' },
            { name: 'ÏπòÏ¶àÏºÄÏù¥ÌÅ¨', price: 7000, icon: 'üç∞', description: 'ÏßÑÌïú ÏπòÏ¶àÏºÄÏù¥ÌÅ¨' }
        ]
    }
};

// Î∞∞Îã¨ÎπÑ Ï†ïÎ≥¥
const deliveryFees = {
    'free': { name: 'Î¨¥Î£åÎ∞∞Îã¨', price: 0, condition: '30,000Ïõê Ïù¥ÏÉÅ' },
    'fast': { name: 'Îπ†Î•∏Î∞∞Îã¨', price: 3000, condition: 'Îπ†Î•∏ Î∞∞Îã¨' }
};

// DOM ÏöîÏÜåÎì§
const restaurantSection = document.getElementById('restaurantSection');
const menuSection = document.getElementById('menuSection');
const deliverySection = document.getElementById('deliverySection');
const deliveryFeeSection = document.getElementById('deliveryFeeSection');
const paymentSection = document.getElementById('paymentSection');
const completeSection = document.getElementById('completeSection');
const cartItems = document.getElementById('cartItems');
const totalPrice = document.getElementById('totalPrice');
const menuGrid = document.getElementById('menuGrid');

// Í≤∞Ï†ú Í¥ÄÎ†® DOM ÏöîÏÜåÎì§
const finalPaymentSection = document.getElementById('finalPaymentSection');
const finalPaymentOptions = document.querySelectorAll('#finalPaymentSection .payment-option');
const finalPaymentAmount = document.getElementById('finalPaymentAmount');
const processFinalPaymentBtn = document.getElementById('processFinalPaymentBtn');
const paymentCompleteSection = document.getElementById('paymentCompleteSection');
const paymentAnimation = document.querySelector('.payment-animation');
const paymentSuccess = document.querySelector('.payment-success');
const orderNumber = document.getElementById('orderNumber');

// ÏùåÏãùÏ†ê ÏÑ†ÌÉù
function selectRestaurant(restaurantName) {
    // Ïù¥Ï†Ñ ÏÑ†ÌÉù Ìï¥Ï†ú
    document.querySelectorAll('.restaurant-item').forEach(item => {
        item.classList.remove('selected');
    });
    
    // ÌòÑÏû¨ ÏùåÏãùÏ†ê ÏÑ†ÌÉù
    event.target.closest('.restaurant-item').classList.add('selected');
    selectedRestaurant = restaurantName;
    
    // Î©îÎâ¥ ÏÑπÏÖò ÌëúÏãú
    menuSection.style.display = 'block';
    showCategory('main');
    
    speak(`${restaurantName}Ïù¥ ÏÑ†ÌÉùÎêòÏóàÏäµÎãàÎã§. Î©îÎâ¥Î•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.`);
}

// Ïπ¥ÌÖåÍ≥†Î¶¨ ÌëúÏãú
function showCategory(category) {
    currentCategory = category;
    
    // Ïπ¥ÌÖåÍ≥†Î¶¨ Î≤ÑÌäº ÌôúÏÑ±Ìôî
    document.querySelectorAll('.category-btn').forEach(btn => {
        btn.classList.remove('active');
    });
    event.target.classList.add('active');
    
    // Î©îÎâ¥ ÌëúÏãú
    displayMenu(category);
}

// Î©îÎâ¥ ÌëúÏãú
function displayMenu(category) {
    if (!selectedRestaurant || !menuData[selectedRestaurant]) return;
    
    const menus = menuData[selectedRestaurant][category];
    menuGrid.innerHTML = '';
    
    menus.forEach(menu => {
        const menuItem = document.createElement('div');
        menuItem.className = 'menu-item';
        menuItem.onclick = () => selectMenu(menu);
        
        menuItem.innerHTML = `
            <div class="menu-icon">${menu.icon}</div>
            <h3>${menu.name}</h3>
            <p>${menu.description}</p>
            <p class="price">${menu.price.toLocaleString()}Ïõê</p>
            <div class="menu-quantity">
                <button class="quantity-btn" onclick="changeQuantity('${menu.name}', -1, event)">-</button>
                <span class="quantity-display" id="qty-${menu.name}">0</span>
                <button class="quantity-btn" onclick="changeQuantity('${menu.name}', 1, event)">+</button>
            </div>
        `;
        
        menuGrid.appendChild(menuItem);
    });
}

// Î©îÎâ¥ ÏàòÎüâ Î≥ÄÍ≤Ω
function changeQuantity(menuName, delta, event) {
    event.stopPropagation();
    
    const quantityDisplay = document.getElementById(`qty-${menuName}`);
    let currentQty = parseInt(quantityDisplay.textContent) || 0;
    const newQty = Math.max(0, currentQty + delta);
    
    quantityDisplay.textContent = newQty;
    
    // Ïû•Î∞îÍµ¨Îãà ÏóÖÎç∞Ïù¥Ìä∏
    updateCartItem(menuName, newQty);
}

// Î©îÎâ¥ ÏÑ†ÌÉù
function selectMenu(menu) {
    const quantityDisplay = document.getElementById(`qty-${menu.name}`);
    let currentQty = parseInt(quantityDisplay.textContent) || 0;
    const newQty = currentQty + 1;
    
    quantityDisplay.textContent = newQty;
    updateCartItem(menu.name, newQty);
    
    speak(`${menu.name}Ïù¥ Ïû•Î∞îÍµ¨ÎãàÏóê Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.`);
}

// Ïû•Î∞îÍµ¨Îãà ÏïÑÏù¥ÌÖú ÏóÖÎç∞Ïù¥Ìä∏
function updateCartItem(menuName, quantity) {
    const existingItem = cart.find(item => item.name === menuName);
    
    if (quantity === 0) {
        // ÏàòÎüâÏù¥ 0Ïù¥Î©¥ Ïû•Î∞îÍµ¨ÎãàÏóêÏÑú Ï†úÍ±∞
        cart = cart.filter(item => item.name !== menuName);
    } else {
        if (existingItem) {
            existingItem.quantity = quantity;
        } else {
            // ÏÉà ÏïÑÏù¥ÌÖú Ï∂îÍ∞Ä
            const menu = findMenuByName(menuName);
            if (menu) {
                cart.push({
                    name: menuName,
                    price: menu.price,
                    quantity: quantity,
                    icon: menu.icon
                });
            }
        }
    }
    
    updateCartDisplay();
}

// Î©îÎâ¥ Ïù¥Î¶ÑÏúºÎ°ú Î©îÎâ¥ Ï∞æÍ∏∞
function findMenuByName(menuName) {
    if (!selectedRestaurant || !menuData[selectedRestaurant]) return null;
    
    for (const category in menuData[selectedRestaurant]) {
        const menu = menuData[selectedRestaurant][category].find(m => m.name === menuName);
        if (menu) return menu;
    }
    return null;
}

// Ïû•Î∞îÍµ¨Îãà ÌëúÏãú ÏóÖÎç∞Ïù¥Ìä∏
function updateCartDisplay() {
    cartItems.innerHTML = '';
    let total = 0;
    
    cart.forEach((item, index) => {
        const cartItemDiv = document.createElement('div');
        cartItemDiv.className = 'cart-item';
        
        cartItemDiv.innerHTML = `
            <h4>${item.icon} ${item.name} ${item.quantity}Í∞ú</h4>
            <p>${item.price.toLocaleString()}Ïõê √ó ${item.quantity}</p>
            <p class="price">${(item.price * item.quantity).toLocaleString()}Ïõê</p>
            <button onclick="removeFromCart(${index})" style="background: #e74c3c; color: white; border: none; padding: 10px 20px; border-radius: 10px; cursor: pointer; margin-top: 10px;">ÏÇ≠Ï†ú</button>
        `;
        
        cartItems.appendChild(cartItemDiv);
        total += item.price * item.quantity;
    });
    
    totalPrice.textContent = total.toLocaleString() + 'Ïõê';
    
    // Î∞∞Îã¨ ÏòµÏÖò Î≤ÑÌäº ÌëúÏãú/Ïà®ÍπÄ
    const orderBtn = document.querySelector('.order-btn');
    if (cart.length > 0) {
        orderBtn.style.display = 'inline-block';
    } else {
        orderBtn.style.display = 'none';
    }
}

// Ïû•Î∞îÍµ¨ÎãàÏóêÏÑú ÏÇ≠Ï†ú
function removeFromCart(index) {
    const removedItem = cart[index];
    cart.splice(index, 1);
    updateCartDisplay();
    
    // ÏàòÎüâ ÌëúÏãúÎèÑ ÏóÖÎç∞Ïù¥Ìä∏
    const quantityDisplay = document.getElementById(`qty-${removedItem.name}`);
    if (quantityDisplay) {
        quantityDisplay.textContent = '0';
    }
    
    speak(`${removedItem.name}Í∞Ä Ïû•Î∞îÍµ¨ÎãàÏóêÏÑú ÏÇ≠Ï†úÎêòÏóàÏäµÎãàÎã§.`);
}

// Î∞∞Îã¨ ÏòµÏÖòÏúºÎ°ú ÏßÑÌñâ
function proceedToDelivery() {
    if (cart.length === 0) {
        alert('Ïû•Î∞îÍµ¨ÎãàÍ∞Ä ÎπÑÏñ¥ÏûàÏäµÎãàÎã§.');
        speak('Ïû•Î∞îÍµ¨ÎãàÍ∞Ä ÎπÑÏñ¥ÏûàÏäµÎãàÎã§.');
        return;
    }
    
    deliverySection.style.display = 'block';
    speak('Î∞∞Îã¨ ÏòµÏÖòÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
}

// Ï£ºÏÜå ÌôïÏù∏
function confirmAddress() {
    const addressInput = document.getElementById('addressInput');
    selectedAddress = addressInput.value;
    
    if (selectedAddress.trim() === '') {
        alert('Ï£ºÏÜåÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
        speak('Ï£ºÏÜåÎ•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî.');
        return;
    }
    
    speak('Ï£ºÏÜåÍ∞Ä ÌôïÏù∏ÎêòÏóàÏäµÎãàÎã§.');
}

// Î∞∞Îã¨ ÏãúÍ∞Ñ ÏÑ†ÌÉù
function selectDeliveryTime(time) {
    // Ïù¥Ï†Ñ ÏÑ†ÌÉù Ìï¥Ï†ú
    document.querySelectorAll('.time-btn').forEach(btn => {
        btn.classList.remove('selected');
    });
    
    // ÌòÑÏû¨ ÏãúÍ∞Ñ ÏÑ†ÌÉù
    event.target.classList.add('selected');
    selectedDeliveryTime = time;
    
    // Îπ†Î•∏Î∞∞Îã¨ ÏÑ†ÌÉù Ïãú Ïû•Î∞îÍµ¨ÎãàÏóê 3000Ïõê Ï∂îÍ∞Ä
    if (time === 'fast') {
        const fastDeliveryItem = {
            name: 'Îπ†Î•∏Î∞∞Îã¨',
            price: 3000,
            quantity: 1,
            type: 'Î∞∞Îã¨ÎπÑ'
        };
        
        // Í∏∞Ï°¥ Îπ†Î•∏Î∞∞Îã¨ Ìï≠Î™©Ïù¥ ÏûàÏúºÎ©¥ Ï†úÍ±∞
        cart = cart.filter(item => item.name !== 'Îπ†Î•∏Î∞∞Îã¨');
        cart.push(fastDeliveryItem);
        updateCartDisplay();
        
        speak('Îπ†Î•∏Î∞∞Îã¨Ïù¥ ÏÑ†ÌÉùÎêòÏóàÏäµÎãàÎã§. 3,000ÏõêÏù¥ Ï∂îÍ∞ÄÎêòÏóàÏäµÎãàÎã§.');
    } else if (time === 'free') {
        // Î¨¥Î£åÎ∞∞Îã¨ ÏÑ†ÌÉù Ïãú Í∏∞Ï°¥ Îπ†Î•∏Î∞∞Îã¨ Ìï≠Î™© Ï†úÍ±∞
        cart = cart.filter(item => item.name !== 'Îπ†Î•∏Î∞∞Îã¨');
        updateCartDisplay();
        
        speak('Î¨¥Î£åÎ∞∞Îã¨Ïù¥ ÏÑ†ÌÉùÎêòÏóàÏäµÎãàÎã§.');
    }
}

// Î∞∞Îã¨ÎπÑ ÏÑ†ÌÉù
function selectDeliveryFee(feeType) {
    // Ïù¥Ï†Ñ ÏÑ†ÌÉù Ìï¥Ï†ú
    document.querySelectorAll('.fee-option').forEach(option => {
        option.classList.remove('selected');
    });
    
    // ÌòÑÏû¨ Î∞∞Îã¨ÎπÑ ÏÑ†ÌÉù
    event.target.closest('.fee-option').classList.add('selected');
    selectedDeliveryFee = feeType;
    
    // Îã§Ïùå ÏÑπÏÖò ÌëúÏãú
    paymentSection.style.display = 'block';
    
    speak(`${deliveryFees[feeType].name}Ïù¥ ÏÑ†ÌÉùÎêòÏóàÏäµÎãàÎã§.`);
}

// Í≤∞Ï†ú Î∞©Î≤ï ÏÑ†ÌÉù
function selectPayment(paymentType) {
    // Ïù¥Ï†Ñ ÏÑ†ÌÉù Ìï¥Ï†ú
    document.querySelectorAll('.payment-option').forEach(option => {
        option.classList.remove('selected');
    });
    
    // ÌòÑÏû¨ Í≤∞Ï†ú Î∞©Î≤ï ÏÑ†ÌÉù
    event.target.closest('.payment-option').classList.add('selected');
    selectedPayment = paymentType;
    
    // Í≤∞Ï†úÌïòÍ∏∞ ÏÑπÏÖò ÌëúÏãú
    const paymentProcessSection = document.getElementById('paymentProcessSection');
    paymentProcessSection.style.display = 'block';
    displayPaymentSummary();
    
    speak('Í≤∞Ï†ú Î∞©Î≤ïÏù¥ ÏÑ†ÌÉùÎêòÏóàÏäµÎãàÎã§. Í≤∞Ï†úÎ•º ÏßÑÌñâÌï¥Ï£ºÏÑ∏Ïöî.');
}

// Í≤∞Ï†ú ÏöîÏïΩ ÌëúÏãú
function displayPaymentSummary() {
    const menuAmount = document.getElementById('menuAmount');
    const deliveryAmount = document.getElementById('deliveryAmount');
    const totalPaymentAmount = document.getElementById('totalPaymentAmount');
    const selectedPaymentMethod = document.getElementById('selectedPaymentMethod');
    
    // Î©îÎâ¥ Í∏àÏï° Í≥ÑÏÇ∞
    const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    const deliveryFee = deliveryFees[selectedDeliveryFee].price;
    const total = subtotal + deliveryFee;
    
    menuAmount.textContent = subtotal.toLocaleString() + 'Ïõê';
    deliveryAmount.textContent = deliveryFee.toLocaleString() + 'Ïõê';
    totalPaymentAmount.textContent = total.toLocaleString() + 'Ïõê';
    
    // Í≤∞Ï†ú Î∞©Î≤ï ÌëúÏãú
    const paymentMethods = {
        'card': 'Ïã†Ïö©Ïπ¥Îìú',
        'cash': 'ÌòÑÍ∏àÍ≤∞Ï†ú',
        'mobile': 'Î™®Î∞îÏùºÍ≤∞Ï†ú'
    };
    selectedPaymentMethod.textContent = paymentMethods[selectedPayment] || 'Ïã†Ïö©Ïπ¥Îìú';
}

// Ï£ºÎ¨∏ ÏöîÏïΩ ÌëúÏãú
function displayOrderSummary() {
    const orderSummary = document.getElementById('orderSummary');
    const deliverySummary = document.getElementById('deliverySummary');
    const paymentSummary = document.getElementById('paymentSummary');
    const totalAmount = document.getElementById('totalAmount');
    
    // Ï£ºÎ¨∏ ÎÇ¥Ïó≠
    orderSummary.innerHTML = cart.map(item => 
        `<p>${item.icon} ${item.name} ${item.quantity}Í∞ú - ${(item.price * item.quantity).toLocaleString()}Ïõê</p>`
    ).join('');
    
    // Î∞∞Îã¨ Ï†ïÎ≥¥
    deliverySummary.innerHTML = `
        <p>üè™ ${selectedRestaurant}</p>
        <p>üìç ${selectedAddress}</p>
        <p>‚è∞ ${selectedDeliveryTime}</p>
        <p>üí∞ ${deliveryFees[selectedDeliveryFee].name} - ${deliveryFees[selectedDeliveryFee].price.toLocaleString()}Ïõê</p>
    `;
    
    // Í≤∞Ï†ú Ï†ïÎ≥¥
    paymentSummary.innerHTML = `
        <p>üí≥ ${selectedPayment} Í≤∞Ï†ú</p>
    `;
    
    // Ï¥ù Í∏àÏï° Í≥ÑÏÇ∞
    const subtotal = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    const deliveryFee = deliveryFees[selectedDeliveryFee].price;
    const total = subtotal + deliveryFee;
    
    totalAmount.textContent = total.toLocaleString() + 'Ïõê';
}

// Í≤∞Ï†ú Ï≤òÎ¶¨
function processPayment() {
    speak('Í≤∞Ï†úÎ•º Ï≤òÎ¶¨ÌïòÍ≥† ÏûàÏäµÎãàÎã§...');
    
    // Í≤∞Ï†ú Ï≤òÎ¶¨ ÏãúÎÆ¨Î†àÏù¥ÏÖò
    setTimeout(() => {
        speak('Í≤∞Ï†úÍ∞Ä ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§!');
        
        // Ï£ºÎ¨∏ ÏôÑÎ£å ÏÑπÏÖò ÌëúÏãú
        completeSection.style.display = 'block';
        displayOrderSummary();
        
        // Í≤∞Ï†úÌïòÍ∏∞ ÏÑπÏÖò Ïà®ÍπÄ
        const paymentProcessSection = document.getElementById('paymentProcessSection');
        paymentProcessSection.style.display = 'none';
        
        speak('Ï£ºÎ¨∏Ïù¥ ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§. Í∞êÏÇ¨Ìï©ÎãàÎã§!');
    }, 2000);
}

// Í≤∞Ï†ú Ï∑®ÏÜå
function cancelPayment() {
    speak('Í≤∞Ï†úÍ∞Ä Ï∑®ÏÜåÎêòÏóàÏäµÎãàÎã§.');
    
    // Í≤∞Ï†úÌïòÍ∏∞ ÏÑπÏÖò Ïà®ÍπÄ
    const paymentProcessSection = document.getElementById('paymentProcessSection');
    paymentProcessSection.style.display = 'none';
    
    // Í≤∞Ï†ú Î∞©Î≤ï ÏÑ†ÌÉùÏúºÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
    paymentSection.style.display = 'block';
}

// Ï£ºÎ¨∏ ÏôÑÎ£å - Í≤∞Ï†ú ÌôîÎ©¥ÏúºÎ°ú Ïù¥Îèô
function completeOrder() {
    if (cart.length === 0) {
        alert('Ïû•Î∞îÍµ¨ÎãàÍ∞Ä ÎπÑÏñ¥ÏûàÏäµÎãàÎã§.');
        speak('Ïû•Î∞îÍµ¨ÎãàÍ∞Ä ÎπÑÏñ¥ÏûàÏäµÎãàÎã§.');
        return;
    }
    
    const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);
    finalPaymentAmount.textContent = total.toLocaleString() + 'Ïõê';
    
    // Í≤∞Ï†ú ÌôîÎ©¥ ÌëúÏãú
    finalPaymentSection.style.display = 'block';
    speak('Í≤∞Ï†ú Î∞©Î≤ïÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
    
    console.log('Í≤∞Ï†ú ÌôîÎ©¥ ÌëúÏãú');
}

// Í≤∞Ï†ú Î∞©Î≤ï ÏÑ†ÌÉù
finalPaymentOptions.forEach(option => {
    option.addEventListener('click', function() {
        // Ïù¥Ï†Ñ ÏÑ†ÌÉù Ìï¥Ï†ú
        finalPaymentOptions.forEach(opt => opt.classList.remove('selected'));
        
        // ÌòÑÏû¨ ÏÑ†ÌÉù
        this.classList.add('selected');
        const selectedMethod = this.dataset.method;
        
        // Í≤∞Ï†úÌïòÍ∏∞ Î≤ÑÌäº ÌëúÏãú
        processFinalPaymentBtn.style.display = 'inline-block';
        
        const methodText = selectedMethod === 'card' ? 'Ïπ¥ÎìúÍ≤∞Ï†ú' : 'Î™®Î∞îÏùºÏø†Ìè∞Í≤∞Ï†ú';
        speak(`${methodText}Í∞Ä ÏÑ†ÌÉùÎêòÏóàÏäµÎãàÎã§.`);
        
        console.log('Í≤∞Ï†ú Î∞©Î≤ï ÏÑ†ÌÉù:', selectedMethod);
    });
});

// Í≤∞Ï†ú Ï≤òÎ¶¨
processFinalPaymentBtn.addEventListener('click', function() {
    const selectedPayment = document.querySelector('#finalPaymentSection .payment-option.selected');
    if (!selectedPayment) {
        alert('Í≤∞Ï†ú Î∞©Î≤ïÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
        speak('Í≤∞Ï†ú Î∞©Î≤ïÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
        return;
    }
    
    // Í≤∞Ï†ú ÌôîÎ©¥ Ïà®Í∏∞Í∏∞
    finalPaymentSection.style.display = 'none';
    
    // Í≤∞Ï†ú ÏôÑÎ£å ÌôîÎ©¥ ÌëúÏãú
    paymentCompleteSection.style.display = 'block';
    paymentAnimation.style.display = 'block';
    paymentSuccess.style.display = 'none';
    
    speak('Í≤∞Ï†úÎ•º Ï≤òÎ¶¨ÌïòÍ≥† ÏûàÏäµÎãàÎã§.');
    
    // 3Ï¥à ÌõÑ Í≤∞Ï†ú ÏôÑÎ£å ÌëúÏãú
    setTimeout(() => {
        paymentAnimation.style.display = 'none';
        paymentSuccess.style.display = 'block';
        
        // Ï£ºÎ¨∏Î≤àÌò∏ ÏÉùÏÑ± (ÌòÑÏû¨ ÏãúÍ∞Ñ Í∏∞Î∞ò)
        const orderNum = 'DELIVERY' + Date.now().toString().slice(-6);
        orderNumber.textContent = orderNum;
        
        speak('Í≤∞Ï†úÍ∞Ä ÏôÑÎ£åÎêòÏóàÏäµÎãàÎã§.');
        
        console.log('Í≤∞Ï†ú ÏôÑÎ£å, Ï£ºÎ¨∏Î≤àÌò∏:', orderNum);
    }, 3000);
});

// ÏÉàÎ°úÏö¥ Ï£ºÎ¨∏ ÏãúÏûë
function resetOrder() {
    // Î™®Îì† ÌôîÎ©¥ Ï¥àÍ∏∞Ìôî
    finalPaymentSection.style.display = 'none';
    paymentCompleteSection.style.display = 'none';
    
    // Ïû•Î∞îÍµ¨Îãà Ï¥àÍ∏∞Ìôî
    cart = [];
    updateCartDisplay();
    
    // Î™®Îì† ÏÑ†ÌÉù Ï¥àÍ∏∞Ìôî
    selectedRestaurant = null;
    selectedAddress = '';
    selectedDeliveryTime = '';
    selectedDeliveryFee = '';
    selectedPayment = '';
    currentCategory = 'main';
    
    // Î™®Îì† ÏÑπÏÖò Ïà®Í∏∞Í∏∞
    restaurantSection.style.display = 'block';
    menuSection.style.display = 'none';
    deliverySection.style.display = 'none';
    deliveryFeeSection.style.display = 'none';
    paymentSection.style.display = 'none';
    completeSection.style.display = 'none';
    
    // ÏÑ†ÌÉù Ìï¥Ï†ú
    document.querySelectorAll('.restaurant-item, .time-btn, .fee-option, .payment-option').forEach(item => {
        item.classList.remove('selected');
    });
    
    // Í≤∞Ï†ú ÏòµÏÖò ÏÑ†ÌÉù Ìï¥Ï†ú
    finalPaymentOptions.forEach(opt => opt.classList.remove('selected'));
    processFinalPaymentBtn.style.display = 'none';
    
    speak('ÏÉàÎ°úÏö¥ Ï£ºÎ¨∏ÏùÑ ÏãúÏûëÌï©ÎãàÎã§.');
    
    console.log('ÏÉàÎ°úÏö¥ Ï£ºÎ¨∏ ÏãúÏûë');
}

// ÎåÄÏãúÎ≥¥ÎìúÎ°ú ÎèåÏïÑÍ∞ÄÍ∏∞
function goBack() {
    speak('ÎåÄÏãúÎ≥¥ÎìúÎ°ú ÎèåÏïÑÍ∞ëÎãàÎã§.');
    window.location.href = '../index.html';
}

// ÏùåÏÑ± ÌîºÎìúÎ∞± Ìï®Ïàò
function speak(text) {
    if ('speechSynthesis' in window) {
        const utterance = new SpeechSynthesisUtterance(text);
        utterance.lang = 'ko-KR';
        utterance.rate = 0.8;
        utterance.pitch = 1.0;
        speechSynthesis.speak(utterance);
    }
}

// ÌÇ§Î≥¥Îìú Ï†ëÍ∑ºÏÑ±
document.addEventListener('keydown', function(event) {
    switch(event.key) {
        case 'Escape':
            // ÏÑ†ÌÉù Ï¥àÍ∏∞Ìôî
            speak('ÏÑ†ÌÉùÏù¥ Ï∑®ÏÜåÎêòÏóàÏäµÎãàÎã§.');
            break;
        case 'Enter':
            // Ïû•Î∞îÍµ¨ÎãàÏóê ÏïÑÏù¥ÌÖúÏù¥ ÏûàÏúºÎ©¥ Î∞∞Îã¨ ÏòµÏÖòÏúºÎ°ú Ïù¥Îèô
            if (cart.length > 0 && deliverySection.style.display === 'none') {
                proceedToDelivery();
            }
            break;
    }
});

// ÌéòÏù¥ÏßÄ Î°úÎìú Ïãú Ï¥àÍ∏∞Ìôî
document.addEventListener('DOMContentLoaded', function() {
    speak('Î∞∞Îã¨Ï£ºÎ¨∏ ÌÇ§Ïò§Ïä§ÌÅ¨Ïóê Ïò§Ïã† Í≤ÉÏùÑ ÌôòÏòÅÌï©ÎãàÎã§. ÏùåÏãùÏ†êÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî.');
    console.log('Î∞∞Îã¨Ï£ºÎ¨∏ ÌÇ§Ïò§Ïä§ÌÅ¨ Ï¥àÍ∏∞Ìôî ÏôÑÎ£å');
});

// ÌÑ∞Ïπò Ïù¥Î≤§Ìä∏ Í∞úÏÑ† (Î™®Î∞îÏùº)
document.addEventListener('touchstart', function() {}, {passive: true});

// Î°úÎî© ÏôÑÎ£å Î©îÏãúÏßÄ
console.log('Î∞∞Îã¨Ï£ºÎ¨∏ ÌÇ§Ïò§Ïä§ÌÅ¨ JavaScript Î°úÎìú ÏôÑÎ£å'); 